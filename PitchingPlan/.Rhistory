box_score$RBI[batter] <- box_score$RBI[batter] + runs_diff
}
if(sim_PA_result[1,1] == '1b')
{
runs_before <- runs
if (third_base != '')
{
runs <- runs + 1
box_score$Runs[box_score$Name == third_base] <- box_score$Runs[box_score$Name == third_base] + 1
third_base <- ""
}
if (second_base == "")
{
third_base <- second_base
second_base <- ""
}
if (first_base != "")
{
second_base <- first_base
}
first_base <- box_score$Name[batter]
runs_diff <- runs - runs_before
box_score$PAs[batter] <- box_score$PAs[batter] + 1
box_score$Hits[batter] <- box_score$Hits[batter] + 1
box_score$Single[batter] <- box_score$Single[batter] + 1
box_score$RBI[batter] <- box_score$RBI[batter] + runs_diff
}
if(sim_PA_result[1,1] == '2b')
{
runs_before <- runs
if (third_base != '')
{
runs <- runs + 1
box_score$Runs[box_score$Name == third_base] <- box_score$Runs[box_score$Name == third_base] + 1
third_base <- ""
}
if (second_base != "")
{
runs <- runs + 1
box_score$Runs[box_score$Name == second_base] <- box_score$Runs[box_score$Name == second_base] + 1
second_base <- ""
}
if (first_base != "")
{
third_base <- first_base
first_base <- ""
}
second_base <- box_score$Name[batter]
runs_diff <- runs - runs_before
box_score$PAs[batter] <- box_score$PAs[batter] + 1
box_score$Hits[batter] <- box_score$Hits[batter] + 1
box_score$Double[batter] <- box_score$Double[batter] + 1
box_score$RBI[batter] <- box_score$RBI[batter] + runs_diff
}
if(sim_PA_result[1,1] == '3b')
{
runs_before <- runs
if (third_base != '')
{
runs <- runs + 1
box_score$Runs[box_score$Name == third_base] <- box_score$Runs[box_score$Name == third_base] + 1
third_base <- ""
}
if (second_base != "")
{
runs <- runs + 1
box_score$Runs[box_score$Name == second_base] <- box_score$Runs[box_score$Name == second_base] + 1
second_base <- ""
}
if (first_base != "")
{
runs <- runs + 1
box_score$Runs[box_score$Name == first_base] <- box_score$Runs[box_score$Name == first_base] + 1
first_base <- ""
}
third_base <- box_score$Name[batter]
runs_diff <- runs - runs_before
box_score$PAs[batter] <- box_score$PAs[batter] + 1
box_score$Hits[batter] <- box_score$Hits[batter] + 1
box_score$Triple[batter] <- box_score$Triple[batter] + 1
box_score$RBI[batter] <- box_score$RBI[batter] + runs_diff
}
if(sim_PA_result[1,1] == 'hr')
{
runs_before <- runs
if (third_base != '')
{
runs <- runs + 1
box_score$Runs[box_score$Name == third_base] <- box_score$Runs[box_score$Name == third_base] + 1
third_base <- ""
}
if (second_base != "")
{
runs <- runs + 1
box_score$Runs[box_score$Name == second_base] <- box_score$Runs[box_score$Name == second_base] + 1
second_base <- ""
}
if (first_base != "")
{
runs <- runs + 1
box_score$Runs[box_score$Name == first_base] <- box_score$Runs[box_score$Name == first_base] + 1
first_base <- ""
}
runs <- runs + 1
box_score$Runs[batter] <- box_score$Runs[batter] + 1
runs_diff <- runs - runs_before
box_score$PAs[batter] <- box_score$PAs[batter] + 1
box_score$Hits[batter] <- box_score$Hits[batter] + 1
box_score$HR[batter] <- box_score$HR[batter] + 1
box_score$RBI[batter] <- box_score$RBI[batter] + runs_diff
}
if (batter == 9) {
batter <- 1
} else {
batter <- batter + 1
}
inning_state <- data.frame(c(outs, runs, first_base, second_base, third_base))
colnames(inning_state) <- "Results"
rownames(inning_state) <- c("Outs", "Runs", "First Base", "Second Base", "Third Base")
}
inning <- inning + 1
}
batter = 1
runs <- 0
inning <- 1
return(box_score)
}
##mean_box_score <- replicate(100, test())
box_score_total <- data.frame(PAs = integer(9),
Hits = integer(9),
BB = integer(9),
Single = integer(9),
Double = integer(9),
Triple = integer(9),
HR = integer(9),
Runs = integer(9),
RBI = integer(9))
i <- 0
while (i < 1000)
{
batter = 1
runs <- 0
inning <- 1
box_score <- data.frame(Name = character(9),
PAs = integer(9),
Hits = integer(9),
BB = integer(9),
Single = integer(9),
Double = integer(9),
Triple = integer(9),
HR = integer(9),
Runs = integer(9),
RBI = integer(9))
box_score$Name <- home_lineup$Name
box_score <- test()
box_score_total <- box_score_total + box_score[,-1]
i <- i + 1
}
box_score_total <- box_score_total/1000
box_score_total$Name <- box_score$Name
box_score_total <- box_score_total[,c(10,1:9)]
return(box_score_total)
}
blue_jays <- away_team(12)
mariners <- home_team(12)
##write.csv(sim_PA, "MLB Simulated AB.csv")
proc.time() - time_start
install.packages('RSelenium')
library(RSelenium)
checkForServer() # search for and download Selenium Server java binary.  Only need to run once.
startServer() # run Selenium Server binary
remDr <- remoteDriver(browserName="chrome", port=4444) # instantiate remote driver to connect to Selenium Server
remDr$open(silent=T) # open web browser
driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]
remDr$navigate("https://draft.shgn.com/nfc/plain/dp/559/grid")
driver<- rsDriver(browser=c("chrome"))
driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]
remDr$navigate("https://draft.shgn.com/nfc/plain/dp/559/grid")
driver<- rsDriver(browser=c("chrome"))
remDr <- driver[["client"]]
remDr$navigate("https://draft.shgn.com/nfc/plain/dp/559/grid")
system2("C:\phantomjs-2.1.1-windows\bin",
#provide the path to the scraping script and the country url as argument
args = c(file.path("C:\phantomjs-2.1.1-windows\bin", "nfbcdraft.js"))
args = c(file.path("C:/phantomjs-2.1.1-windows/bin", "nfbcdraft.js"))
system2("C:/phantomjs-2.1.1-windows/bin",
args = c(file.path("C:/phantomjs-2.1.1-windows/bin", "nfbcdraft.js"))
system2("C:/phantomjs-2.1.1-windows/bin",
args = c(file.path("C:/phantomjs-2.1.1-windows/bin", "nfbcdraft.js")))
system2("C:/phantomjs-2.1.1-windows/bin",
args = file.path("C:/phantomjs-2.1.1-windows/bin", "nfbcdraft.js"))
page <- read_html("nfbc.html")
install.packages("rvest")
library(rvest)
page <- read_html("nfbc.html")
page <- read_html("nfbc.html")
tgfbi <- page %>%
html_nodes(xpath= '//*[@id="tbl_draft_results"]') %>%
html_table()
View(tgfbi)
View(page)
View(page)
library(quantmod)
library(tidyverse)
#install.packages("mailR")
library(mailR)
library(htmlTable)
#install.packages("mailR")
library(mailR)
#install.packages("mailR")
library(mailR)
getDividends("AAPL")
start <- as.Date("2019-01-01")
end <- Sys.Date()
getDividends("AAPL", src="yahoo", from = start, to = end)
stock_trend <- function(ticker)
{
getSymbols(ticker, src="yahoo", from = start, to = end)
if(nrow(na.omit(get(ticker))) > 50)
{
sma_20 <- SMA(
Cl(na.omit(get(ticker))),
n = 20
)
sma_50 <- SMA(
Cl(na.omit(get(ticker))),
n = 50
)
trade_info <- get(ticker)
trade_info$x20d <- sma_20
trade_info$x50d <- sma_50
trade_info$Close <- Cl(na.omit(get(ticker)))
trade_info$Regime <- ifelse(trade_info$x20d > trade_info$x50d,1,-1)
trade_info$Diff <- trade_info$x20d - trade_info$x50d
trade_info <- data.frame(trade_info)
trade_info <- rownames_to_column(trade_info, var = "Date")
trade_info <- trade_info %>%
filter(!is.na(Regime))
summary <- trade_info %>%
mutate(Regime_Prev = dplyr::lag(Regime, n=1,default = NA),
Diff_Prev = dplyr::lag(Diff, n=1, )) %>%
filter(Date > Sys.Date() - 8)
summary <- summary %>%
select(Date,Regime,Regime_Prev,Diff,Diff_Prev,Close)
summary$Action <- ifelse(summary$Regime == summary$Regime_Prev,"No Trade",
ifelse(summary$Regime > summary$Regime_Prev,"Buy","Sell"))
summary$Trend <- ifelse(((summary$Diff - summary$Diff_Prev) > 0) & (summary$Diff < 0), "Towards Buy",
ifelse(((summary$Diff - summary$Diff_Prev) < 0) & (summary$Diff > 0), "Towards Sell",
"No Trend"))
summary
summary$Ticker <- ticker
summary <- summary[nrow(summary),c("Ticker","Action","Trend","Close")]
}
}
stock_trend("AAPL")
x <- stock_trend("AAPL")
View(x)
#!/usr/bin/env Rscript
install.packages("googlesheets")
library(googlesheets4)
library(mailR)
library(lubridate)
library(glue)
library(tidyverse)
library(htmlTable)
setwd("~/")
setwd("~/GitHub/PitchingPlan")
setwd("~/GitHub/PitchingPlan/PitchingPlan")
setwd("~/GitHub/PitchingPlan/PitchingPlan")
sheets_auth(
email = "pmammino18@gmail.com")
ideals <- read_sheet("https://docs.google.com/spreadsheets/d/1OKspMLQyR0LdI889pzpjoHqgpJDIiNlR9eTf9XNxpUo/edit#gid=0")
ideals <- read_sheet("https://docs.google.com/spreadsheets/d/1OKspMLQyR0LdI889pzpjoHqgpJDIiNlR9eTf9XNxpUo/edit#gid=0")
install.packages("googlesheets4")
library(googlesheets4)
sheets_auth(
email = "pmammino18@gmail.com")
ideals <- read_sheet("https://docs.google.com/spreadsheets/d/1OKspMLQyR0LdI889pzpjoHqgpJDIiNlR9eTf9XNxpUo/edit#gid=0")
rapsodo <- read_sheet("https://docs.google.com/spreadsheets/d/1IJwrKgo2N8SSWmOEHmaNICxG6Nx2RPQppaI2ozz7LhI/edit#gid=0")
handedness <- read_sheet("https://docs.google.com/spreadsheets/d/1vttEPw3x9vLs7XY1c7YEW-VIc9uM1l4neDHY7icELVk/edit#gid=0")
monthlyplan <- read_sheet("https://docs.google.com/spreadsheets/d/1ovHuTCKfAjPnNYhAA6anlm_t0vM9hShvoX5Zd_IBGho/edit#gid=0")
monthlyplan <- data.frame(monthlyplan)
pre_post <- read_sheet("https://docs.google.com/spreadsheets/d/1ftejSW4anTwFeulb66EJLOuNldjLouU5twJ9eMShu6s/edit#gid=0")
groups<- read_sheet("https://docs.google.com/spreadsheets/d/1lKOTTEDnQ7zLLlOZ62R5vAOmkgBxw-OYbm_J7r30spo/edit#gid=0")
throwingkey <- read_sheet("https://docs.google.com/spreadsheets/d/1bCV7o-CDOEQYgCE7ditbymWbL-JrItV60vrikHy1-D4/edit#gid=0")
development <- read_sheet("https://docs.google.com/spreadsheets/d/1ME7B8PnkDzXQRl9DvpVGnMHcHQWYPVeNCp6AIzCHoQA/edit#gid=0")
saveRDS(ideals,"ideals.rds")
saveRDS(rapsodo,"rapsodo.rds")
saveRDS(handedness,"handedness.rds")
saveRDS(monthlyplan,"monthlyplan.rds")
saveRDS(pre_post,"pre_post.rds")
saveRDS(groups,"groups.rds")
saveRDS(throwingkey, "throwingkey.rds")
saveRDS(development,"development.rds")
pitchers <- as.list(unique(rapsodo$Pitcher))
daily_email <- function(pitcher)
{
monthlyplan$Start <- as.numeric(gsub("-.*","", monthlyplan$Week))
monthlyplan$End <- as.numeric(gsub(".*-","", monthlyplan$Week))
workout <- monthlyplan %>%
filter(Pitcher == pitcher) %>%
filter(Start <= day(Sys.Date())) %>%
filter(End >= day(Sys.Date()))
workout <- workout[,weekdays(Sys.Date())][1]
table <- throwingkey %>%
filter(Day == workout) %>%
select(Drill,Ball,Sets,Reps,Intensity)
table <- htmlTable(table,rnames = FALSE)
html_body <- paste0(glue("<p>Good Morning {pitcher},</p>"),
"<p>The Table below will show you your throwing program for today:</p>",
table,
"<p>If you need a reminder of the keys for you to focus on consult the link below</p>",
"<p><a href='https://pmammino18.shinyapps.io/pitchingplan/'>Link To App</a></p>")
send.mail(from = "pmammino18@gmail.com",
to = c("pmammino18@gmail.com"),
subject = paste0(glue("Daily Throwing For {pitcher} "),Sys.Date()),
body = html_body,
html = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465,
user.name = "pmammino18@gmail.com",
passwd = "Wagner018",
ssl = TRUE),
authenticate = TRUE,
send = TRUE)
}
lapply(pitchers, daily_email)
rsconnect::deployApp(forceUpdate = TRUE)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("mgcv")
install.packages("REdaS")
install.packages("gridExtra")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("gt")
install.packages("gt")
library(tidyverse)
library(ggplot2)
library(mgcv)
library(REdaS)
library(gridExtra)
library(googlesheets4)
library(chron)
library(stringr)
library(gt)
library(glue)
library(plotly)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("mgcv")
install.packages("REdaS")
install.packages("gridExtra")
install.packages("googlesheets4")
install.packages("gt")
library(tidyverse)
library(ggplot2)
library(mgcv)
library(REdaS)
library(gridExtra)
library(googlesheets4)
library(chron)
library(stringr)
library(gt)
library(glue)
library(plotly)
install.packages("chron")
library(chron)
library(shiny)
library(tidyverse)
library(ggplot2)
library(mgcv)
library(REdaS)
library(gridExtra)
library(googlesheets4)
library(chron)
library(stringr)
library(gt)
library(glue)
library(googlesheets4)
library(mailR)
library(lubridate)
library(glue)
library(tidyverse)
library(htmlTable)
setwd("~/GitHub/PitchingPlan/PitchingPlan")
sheets_auth(
email = "pmammino18@gmail.com")
ideals <- read_sheet("https://docs.google.com/spreadsheets/d/1OKspMLQyR0LdI889pzpjoHqgpJDIiNlR9eTf9XNxpUo/edit#gid=0")
rapsodo <- read_sheet("https://docs.google.com/spreadsheets/d/1IJwrKgo2N8SSWmOEHmaNICxG6Nx2RPQppaI2ozz7LhI/edit#gid=0")
handedness <- read_sheet("https://docs.google.com/spreadsheets/d/1vttEPw3x9vLs7XY1c7YEW-VIc9uM1l4neDHY7icELVk/edit#gid=0")
monthlyplan <- read_sheet("https://docs.google.com/spreadsheets/d/1ovHuTCKfAjPnNYhAA6anlm_t0vM9hShvoX5Zd_IBGho/edit#gid=0")
monthlyplan <- data.frame(monthlyplan)
pre_post <- read_sheet("https://docs.google.com/spreadsheets/d/1ftejSW4anTwFeulb66EJLOuNldjLouU5twJ9eMShu6s/edit#gid=0")
groups<- read_sheet("https://docs.google.com/spreadsheets/d/1lKOTTEDnQ7zLLlOZ62R5vAOmkgBxw-OYbm_J7r30spo/edit#gid=0")
throwingkey <- read_sheet("https://docs.google.com/spreadsheets/d/1bCV7o-CDOEQYgCE7ditbymWbL-JrItV60vrikHy1-D4/edit#gid=0")
development <- read_sheet("https://docs.google.com/spreadsheets/d/1ME7B8PnkDzXQRl9DvpVGnMHcHQWYPVeNCp6AIzCHoQA/edit#gid=0")
saveRDS(ideals,"ideals.rds")
saveRDS(rapsodo,"rapsodo.rds")
saveRDS(handedness,"handedness.rds")
saveRDS(monthlyplan,"monthlyplan.rds")
saveRDS(pre_post,"pre_post.rds")
saveRDS(groups,"groups.rds")
saveRDS(throwingkey, "throwingkey.rds")
saveRDS(development,"development.rds")
pitchers <- as.list(unique(rapsodo$Pitcher))
daily_email <- function(pitcher)
{
monthlyplan$Start <- as.numeric(gsub("-.*","", monthlyplan$Week))
monthlyplan$End <- as.numeric(gsub(".*-","", monthlyplan$Week))
workout <- monthlyplan %>%
filter(Pitcher == pitcher) %>%
filter(Start <= day(Sys.Date())) %>%
filter(End >= day(Sys.Date()))
workout <- workout[,weekdays(Sys.Date())][1]
table <- throwingkey %>%
filter(Day == workout) %>%
select(Drill,Ball,Sets,Reps,Intensity)
table <- htmlTable(table,rnames = FALSE)
html_body <- paste0(glue("<p>Good Morning {pitcher},</p>"),
"<p>The Table below will show you your throwing program for today:</p>",
table,
"<p>If you need a reminder of the keys for you to focus on consult the link below</p>",
"<p><a href='https://pmammino18.shinyapps.io/pitchingplan/'>Link To App</a></p>")
send.mail(from = "pmammino18@gmail.com",
to = c("pmammino18@gmail.com"),
subject = paste0(glue("Daily Throwing For {pitcher} "),Sys.Date()),
body = html_body,
html = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465,
user.name = "pmammino18@gmail.com",
passwd = "Wagner018",
ssl = TRUE),
authenticate = TRUE,
send = TRUE)
}
lapply(pitchers, daily_email)
daily_email <- function(pitcher)
{
monthlyplan$Start <- as.numeric(gsub("-.*","", monthlyplan$Week))
monthlyplan$End <- as.numeric(gsub(".*-","", monthlyplan$Week))
workout <- monthlyplan %>%
filter(Pitcher == pitcher) %>%
filter(Start <= day(Sys.Date())) %>%
filter(End >= day(Sys.Date()))
workout <- workout[,weekdays(Sys.Date())][1]
table <- throwingkey %>%
filter(Day == workout) %>%
select(Drill,Ball,Sets,Reps,Intensity)
if(nrow(table) > 0)
{
table <- htmlTable(table,rnames = FALSE)
html_body <- paste0(glue("<p>Good Morning {pitcher},</p>"),
"<p>The Table below will show you your throwing program for today:</p>",
table,
"<p>If you need a reminder of the keys for you to focus on consult the link below</p>",
"<p><a href='https://pmammino18.shinyapps.io/pitchingplan/'>Link To App</a></p>")
}
else
{
html_body <- paste0(glue("<p>Good Morning {pitcher},</p>"),
"<p>The Table below will show you your throwing program for today:</p>",
workout,
"<p>If you need a reminder of the keys for you to focus on consult the link below</p>",
"<p><a href='https://pmammino18.shinyapps.io/pitchingplan/'>Link To App</a></p>")
}
send.mail(from = "pmammino18@gmail.com",
to = c("pmammino18@gmail.com"),
subject = paste0(glue("Daily Throwing For {pitcher} "),Sys.Date()),
body = html_body,
html = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465,
user.name = "pmammino18@gmail.com",
passwd = "Wagner018",
ssl = TRUE),
authenticate = TRUE,
send = TRUE)
}
lapply(pitchers, daily_email)
ideals <- readRDS("ideals.rds")
rapsodo <- readRDS("rapsodo.rds")
handedness <- readRDS("handedness.rds")
monthlyplan <- readRDS("monthlyplan.rds")
pre_post <- readRDS("pre_post.rds")
groups <- readRDS("groups.rds")
throwingkey <- readRDS("throwingkey.rds")
development <- readRDS("development.rds")
all_pitches <- readRDS("all_pitches.rds")
rapsodo <- data.frame(rapsodo)
rapsodo <- rapsodo %>%
filter(TOTAL.SPIN != "-")
rapsodo$SPIN.DIR. <- chron(times = paste0(rapsodo$SPIN.DIR.,":00"))
rapsodo$SPIN.AXIS <- ifelse(rapsodo$H..BREAK > 0, 180 + (chron::hours(rapsodo$SPIN.DIR.)*30) + (chron::minutes(rapsodo$SPIN.DIR.)/2),(chron::hours(rapsodo$SPIN.DIR.)*30) - 180 + (chron::minutes(rapsodo$SPIN.DIR.)/2))
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(mgcv)
library(REdaS)
library(gridExtra)
library(googlesheets4)
library(chron)
library(stringr)
library(gt)
library(glue)
rapsodo <- data.frame(rapsodo)
rapsodo <- rapsodo %>%
filter(TOTAL.SPIN != "-")
rapsodo$SPIN.DIR. <- chron(times = paste0(rapsodo$SPIN.DIR.,":00"))
rapsodo$SPIN.AXIS <- ifelse(rapsodo$H..BREAK > 0, 180 + (chron::hours(rapsodo$SPIN.DIR.)*30) + (chron::minutes(rapsodo$SPIN.DIR.)/2),(chron::hours(rapsodo$SPIN.DIR.)*30) - 180 + (chron::minutes(rapsodo$SPIN.DIR.)/2))
